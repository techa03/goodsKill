server:
  port: 80
spring:
  cloud:
    sentinel:
      filter:
        ## 网关服务此项需配置为false（若在网关流控控制台上看到了 URL 资源，就是此配置项没有置为 false）
        enabled: false
      transport:
        port: 8719
        ## 默认端口8080，已改为自定义18088端口，通过http://127.0.0.1:18088/#/dashboard访问
        dashboard: localhost:18088
      ##使用nacos配置中心存储限流规则
      datasource:
        ds0:
          nacos:
            data-id: ${spring.application.name}-flow-rules
            #            data-type: json
            group-id: DEFAULT_GROUP
            rule-type: gw-flow
            server-addr: nacos:8848
            username: nacos
            password: nacos
    gateway:
      ##开启指标监控
      metrics:
        enabled: true
      predicate:
        weight:
          enabled: false
      globalcors:
        cors-configurations:
          '[/**]':
            allowCredentials: true
            allowedOriginPatterns: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
      httpclient:
        ssl:
          useInsecureTrustManager: true
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: oauth2-auth-server
          uri: lb://oauth2-auth-server
          predicates:
            - Path=/oauth/**,/.well-known/jwks.json
        - id: oauth2-resource-server
          uri: lb://oauth2-resource-server
          predicates:
            - Path=/api/v5/user
        - id: goodskill-admin
          uri: lb://goodskill-admin
          predicates:
            - Path=/admin/**
          filters:
            - StripPrefix=1
  data:
    redis:
      password: 123456
      host: redis
  main:
    allow-bean-definition-overriding: true
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'

nacos:
  router:
    data:
      id: goodskill-gateway-routes

#接口白名单
security:
  ignore:
    whiteUrl:
      - "/api/auth/login"
    loginUserWhiteUrls:
      - "/api/xxx"


knife4j:
  gateway:
    enabled: true
    # 指定服务发现的模式聚合微服务文档，并且是默认`default`分组
    strategy: manual
    routes:
      - name: web服务
        service-name: goodskill-web
        url: /api/web/v3/api-docs?group=default
        order: 1
      - name: 认证服务
        service-name: goodskill-auth
        url: /api/auth/v3/api-docs?group=default
        order: 3
      - name: 订单服务
        service-name: goodskill-order
        url: /api/order/v3/api-docs?group=default
        order: 4
      - name: seata服务
        service-name: goodskill-seata
        url: /api/seata/v3/api-docs?group=default
        order: 5
      - name: 秒杀服务
        service-name: goodskill-service-provider
        url: /api/seckill/v3/api-docs?group=default
        order: 6

    discover:
      enabled: true
      # 指定版本号(Swagger2|OpenAPI3)
      version : openapi3

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: access_token
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: simple-uuid
  # 是否输出操作日志
  is-log: true
  # 关闭banner打印
  is-print: true

---
spring:
  config:
    activate:
      on-profile: docker,dev
  cloud:
    nacos:
      server-addr: nacos:8848
    sentinel:
      datasource:
        ds0:
          nacos:
            server-addr: nacos:8848


