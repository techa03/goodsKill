spring:
  profiles:
    active: dev
  application:
    name: goodskill-web
  #OAuth2.0第三方登录配置
  security:
    oauth2:
      client:
        registration:
          gitee:
            ##替换成你自己的App密钥
            client-id: xxx
            client-secret: xxx
          github:
            ##替换成你自己的App密钥
            client-id: xxx
            client-secret: xxx
          ## 使用自定义的OAuth2.0授权登录服务
          goodskill:
            ##替换成你自己的App密钥
            client-id: second-client
            client-secret: noonewilleverguess
  session:
    redis:
      flush-mode: on_save
      namespace: spring:session
    store-type: redis
    timeout: 1800
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp
    # json格式请求前台到后台的格式转换
    format:
      date: yyyy-MM-dd HH:mm:ss
      date-time: yyyy-MM-dd HH:mm:ss
      time: HH:mm:ss
    # 升级到springboot 2.6需要增加以下配置，否则springfox启动报错
    pathmatch:
      matching-strategy: ant_path_matcher
  output:
    ansi:
      enabled: always
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    nacos:
      discovery:
        metadata:
          management:
            ##配置元数据解决SpringBoot Admin无法正常监控问题
            context-path: ${server.servlet.context-path}/actuator
    function:
      ##多个用;分隔
      definition: seckillResult;seckillCanalResult
    stream:
      bindings:
        ##配置消息绑定
        seckill-out-0:
          destination: seckill
        seckillResult-in-0:
          ##解决重复消费问题，注意：同一组下只消费一次
          group: default
          destination: seckill-result
        seckillCanalResult-in-0:
          ##解决重复消费问题，注意：同一组下只消费一次
          group: default
          destination: seckill-canal-result
    sentinel:
      transport:
        port: 8719
        ##默认端口8080，已改为自定义18088端口，通过http://127.0.0.1:18088/#/dashboard访问
        dashboard: localhost:18088
      ##使用nacos配置中心存储限流规则
      datasource:
        ds0:
          nacos:
            data-id: ${spring.application.name}-flow-rules
            data-type: json
            group-id: DEFAULT_GROUP
            rule-type: flow
            server-addr: nacos:8848
            username: nacos
            password: nacos

dubbo:
  protocol:
    name: dubbo
    port: -1
  consumer:
    timeout: 30000
    check: false
  application:
    enable-file-cache: false
    qos-port: 22224

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

goodskill:
  loginUrl: ${goodskill.gateway.host}${server.servlet.context-path}/login
  gateway:
    host: http://www.goodskill.com:${server.port}

server:
  port: 8080
  servlet:
    context-path: /goodskill/web
    encoding:
      charset: utf-8
      enabled: true
      force: true
    register-default-servlet: true

minio:
  endpoint: http://localhost:19000
  accessKey: goodskill
  secretKey: password
  bucketName: goodskill

springdoc:
  version: '@springdoc.version@'
  swagger-ui:
    display-request-duration: true
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    use-root-path: true
  show-actuator: true
  group-configs:
    - group: web
      paths-to-match: /**
---
spring:
  config:
    activate:
      on-profile: docker,dev
  cloud:
    nacos:
      server-addr: nacos:8848
    sentinel:
      datasource:
        ds0:
          nacos:
            server-addr: nacos:8848
  kafka:
    bootstrap-servers: kafka:9092
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
  data:
    redis:
      host: redis
      port: 6379
      password: 123456
dubbo:
  registry:
    address: zookeeper://zookeeper:2181


